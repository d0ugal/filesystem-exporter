name: Release Please

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
      upload_url: ${{ steps.release_please.outputs.upload_url }}
      tag_name: ${{ steps.release_please.outputs.tag_name }}
      name: ${{ steps.release_please.outputs.name }}
      body: ${{ steps.release_please.outputs.body }}
      draft: ${{ steps.release_please.outputs.draft }}
      prerelease: ${{ steps.release_please.outputs.prerelease }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - uses: googleapis/release-please-action@v4
      id: release_please
      with:
        release-type: go
        path: .
        token: ${{ secrets.GITHUB_TOKEN }}
        # Alternative: use PAT if available
        # token: ${{ secrets.PAT_TOKEN }}

    - name: Create GitHub Release
      if: steps.release_please.outputs.release_created == 'true'
      uses: actions/github-script@v7
      env:
        TAG_NAME: ${{ steps.release_please.outputs.tag_name }}
        RELEASE_NAME: ${{ steps.release_please.outputs.name }}
        RELEASE_BODY: ${{ steps.release_please.outputs.body }}
        RELEASE_DRAFT: ${{ steps.release_please.outputs.draft }}
        RELEASE_PRERELEASE: ${{ steps.release_please.outputs.prerelease }}
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: process.env.TAG_NAME,
            name: process.env.RELEASE_NAME,
            body: process.env.RELEASE_BODY,
            draft: process.env.RELEASE_DRAFT === 'true',
            prerelease: process.env.RELEASE_PRERELEASE === 'true'
          });
          console.log('Created release: ' + release.html_url);
