name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to build'
        required: true
        default: 'v1.1.0'
        type: string

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  debug:
    name: Debug Release Event
    runs-on: ubuntu-latest
    steps:
    - name: Debug Information
      run: |
        echo "Release event triggered!"
        echo "Event name: ${{ github.event_name }}"
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "Release ID: ${{ github.event.release.id }}"
          echo "Release tag: ${{ github.event.release.tag_name }}"
          echo "Release name: ${{ github.event.release.name }}"
          echo "Release draft: ${{ github.event.release.draft }}"
          echo "Release prerelease: ${{ github.event.release.prerelease }}"
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manual trigger with tag: ${{ github.event.inputs.tag_name }}"
        fi
        echo "Actor: ${{ github.actor }}"
        echo "Repository: ${{ github.repository }}"

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [debug]
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  create-release-notes:
    name: Create Release Notes
    runs-on: ubuntu-latest
    needs: [debug]
    if: github.event_name == 'release'
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate release notes
      id: release_notes
      uses: googleapis/release-please-action@v4
      with:
        release-type: go
        path: .

    - name: Update release description
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.getRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id
          });
          
          const notes = '${{ steps.release_notes.outputs.release_notes }}';
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: notes
          });
